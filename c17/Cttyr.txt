   Класс C++ для независимого от компилятора потокового вывода

                      (версия 2.0)

                Руководство программиста

Содержание
==========

1. Введение

2. Состав дистрибутива

3. Правила применения

3.1. Объявление объектов класса и штатные операции
3.2. Общие методы форматирования строк и чисел
3.3. Специальные методы форматирования строк и чисел
3.4. Вспомогательные функции и объявления
3.5. Спецификация функции-обработчика
3.6. Указатель на функцию-обработчик
3.7. Опции препроцессора

Приложение 1: Сводная таблица определений и методов

Приложение 2: Известные ошибки

Приложение 3: Что нового


1. Введение
===========

Класс cTTY обеспечивает ограниченный потоковый вывод, независимый
от версии библиотеки iostream. Программный код, использующий класс
cTTY не нуждается в подключении заголовочного файла iostream или
iostream.h. По умолчанию, вывод не производится, если только класс
не инициализируется в программе явным образом.

Все авторские права на данный программный код исчерпывающе
описываются нижеследующим копирайтом:

Copyright 2005-2010, Р.Н.Шакиров, ИМаш УрО PAH.

Код предоставляется на условиях лицензии "public domain",
т.е. допускается свободное применение, модификация и
распространение кода, в том числе и для коммерческих целей,
при условии размещения данного копирайта в доступной для
конечного пользователя документации, а также добавления
исчерпывающих сведений о всех внесенных изменениях.

Данное соглашение не ограничивает Ваши исключительные права
на разработки, выполненные с применением данного кода и
накладывает на Вас какие-либо иные обязательства, кроме
упоминания об авторстве данного кода.

Автор подтверждает, что он урегулировал все юридические вопросы,
связанные с использованием в разработанном им программном коде
интеллектуальной собственности третьих сторон.

Автор гарантирует, что разработанный им программный код не
содержит компоненты, назначение которых отлично от основной
цели, декларированной в данной документации.

ДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ ПО ПРИНЦИПУ
"КАК ЕСТЬ" ("AS IS") БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, ЯВНЫХ ИЛИ
ПОДРАЗУМЕВАЕМЫХ. ВЫ ИСПОЛЬЗУЕТЕ ЕГО НА СВОЙ СОБСТВЕННЫЙ СТРАХ
И РИСК. АВТОР НЕ БУДЕТ НЕСТИ ОТВЕТСТВЕННОСТЬ ЗА УТРАТУ ДАННЫХ,
УЩЕРБ, УБЫТКИ ИЛИ ЛЮБЫЕ ДРУГИЕ ВИДЫ ПОТЕРЬ ПРИ ЛЮБЫХ СПОСОБАХ
ИСПОЛЬЗОВАНИЯ ДАННОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ.


2. Состав дистрибутива
======================

   Cbnl.h       - декларации для определения компилятора
   Cios.h       - декларации стандартного потокового ввода-вывода
   Ctty.cpp     - обработчики независимого потокового вывода
   Ctty.h       - класс для независимого потокового вывода
   Ctty.txt     - руководство по применению класса (рус.)
   Cttyr.txt    - руководство по применению класса (англ.)


3. Правила применения
=====================

1.  Разместить в рабочем каталоге файлы:
        Cbnl.h
        Cios.h       (опция)
        Ctty.cpp     (опция)
        Ctty.h

2.  Включить в проект файл:
        Ctty.cpp     (опция)

3.  Добавить в тексты программных модулей директиву:
        #include "Ctty.h"


3.1. Объявление объектов класса и штатные операции
--------------------------------------------------

1.  Объект класса объявляется как:
        cTTY os;

2.  Для функционирования, объект инициализируется присваиванием
    другого объекта класса или функции-обработчика.
        cTTY_StandardOutput - для вывода в cout
        cTTY_ProgressOutput - для вывода в cerr
        NULL                - нет вывода (по умолчанию)

    Например:
        cTTY os = cTTY_StandardOutput;
        ...
        cTTY os2 = os;

    ПРИМЕЧАНИЕ: Функции-обработчики cTTY определены в Ctty.cpp.
                Чтобы их использовать, надо подключить этот файл
                к проекту.

3.  Класс определяет операции вставки для символов, символьных строк
    и чисел с знаком.

    Например:
        os << "Number " << 5;

    Операции вставки для других объектов, которые не могут быть
    автоматически преобразованы к указанным форматам, должны
    быть определены явным образом.

    ПРИМЕЧАНИЕ: Класс не поддерживает модификаторы потока.
                Вместо них предусмотрены методы форматирования,
                описанные в разделах 3.2 и 3.3.

4.  Специальная обработка проводится при вставке \r,
    который трактуется как метка завершения вывода.

    Для cTTY_StandardOutput каждый вывод \r в непустую строку
    начинает новую строку и делает сброс потока (flush). Если
    строка пустая, то не делается ничего.

    Для cTTY_ProgressOutput каждый вывод \r очищает строку
    справа от курсора, возвращает курсор на начало строки
    и делает сброс потока.

    Например:
        os << "Number " << 5 << '\r';
        os << "Number " << 5 << " passed\r";

5.  Класс также делает сброс потока при выводе \n, а также
    вставки отдельного '\0' или пустой строки "".

    Например:
        os << "Number " << 5 << "";
        ...
        os << " passed\n";

6.  Оператор <<= делает вставку и добавляет \r.

    Этот оператор позволяет сократить код, например:
        os << "Number " <<= 5;

    ПРИМЕЧАНИЕ: К оператору <<= нельзя добавлять последующие
                вставки.

7.  Несколько объектов cTTY могут делать вывод одновременно.
    Каждая вставка в cTTY_StandardOutput автоматически очищает
    текущую строку cTTY_ProgressOutput.

8.  При вызове деструктора объект cTTY автоматически завершает
    свой вывод вставкой \r.


3.2. Общие методы форматирования строк и чисел
----------------------------------------------

Методы обеспечивают вывод комментирующих строк и чисел
с различным форматированием.

Метод put() выдает поток для последующего вывода,

Метод show() не выдает поток для последующих вставок
но вместо этого добавляет \r для завершения вывода.

   os.put  (s,n)        Вывод строки s, пробела и числа n.
   os.show (s,n)        Например:       Test 100
                                        Test 1000
                                        Test 10000

   os.put  (s,n,m)      Вывод строки s, пробела и чисел n of m.
   os.show (s,n,m)      Например:       Test 100 of 200
                                        Test 1000 of 2000
                                        Test 10000 of 20000
                        ПРИМЕЧАНИЕ: Часть "of m" не выводится при m = 0.

   os.put  (s,n,m,o)    Вывод строки s и чисел под опциями o.
   os.show (s,n,m,o)    ПРИМЕЧАНИЕ: Часть "of m" не выводится при m = 0.
                                    Числа не выводятся при n = m = 0 и
                                    всех опциях cTTY_num... равных 0.

Отдельные опции комбинируются через | или +:

   cTTY_strwidth (n)    Дополнить строку пробелами до размера n, чтобы
                        расширить поле для числа.
                        ПРИМЕЧАНИЕ: Если s = NULL или числа не выводятся
                                    то дополнение не производится.

   cTTY_numspace        Обеспечить по меньшей мере один пробел перед
                        каждым числом.
                        ПРИМЕЧАНИЕ: Эта опция включена для сокращенного
                                    списка аргументов (s,n) or (s,n,m).

   cTTY_numscale        Вывести на более 4 округленных старших цифр
                        с масштабным суффиксом K,M,G,T,P.

   cTTY_numpercent      Вывести n% или округленный процент 100*n/m%.

   cTTY_numwidth (n)    Выровнять числа вправо до заданного размера.
                        Если n = 0 или 1, то числа выровнены влево.

   'c'                  Добавить символ c. Эта опция определена только
                        для put(), потому что show добавляет \r.

ПРИМЕЧАНИЕ: Округление проводится к ближайшему целому.

Примеры применения опций приведены в разделе 3.3.


3.3. Специальные методы форматирования строк и чисел
----------------------------------------------------

Методы обеспечивают вывод комментирующих строк и чисел
с предопределенным форматированием.

Строка выравнивается вправо пробелами до 12 символов, за исключением
случая, когда вместо не стоит NULL - это значит, что строки не
выводится.

Числа выравниваются вправо до зависящего от метода числа цифр.
Если число длиннее, то оно расширяется влево, пока есть место
после строки, а затем вправо.

Методы put...() выдают поток для последующего вывода,

Методы show...() не выдает поток для последующих вставок
но вместо этого добавляет \r для завершения вывода.

  os.putSpaced  (s,n)   Вывод строки s, пробела и числа n.
  os.showSpaced (s,n)   Например:       Test         100
                                        TestTest     1000
                                        TestTestTest 10000

  os.putSpaced  (s,n,m) Вывод строки s, пробела и чисел n of m.
  os.showSpaced (s,n,m) Например:       Test         100 of 200
                                        TestTest     1000 of 2000
                                        TestTestTest 10000 of 20000
                        ПРИМЕЧАНИЕ: Часть "of m" не выводится при m = 0.

  os.putScaled  (s,n)   Вывод строки s и 1-4 цифр числа со знаком n, для
  os.showScaled (s,n)   больших значений 2-4 округленных старших цифр
                        с суффиксом K = 1024, M = 1024K etc.
                        Например:       Test          100
                                        TestTest     1000
                                        TestTestTest   10K

  os.putScaled  (s,n,m) Вывод строки s и 1-4 цифр чисел n of m, для
  os.showScaled (s,n,m) больших значений 0-4 округленных старших цифр
                        с соответствующим суффиксом K,M,G,T,P после m.
                        Например:       Test          100 of  200
                                        TestTest     1000 of 2000
                                        TestTestTest   10 of   20K
                        ПРИМЕЧАНИЕ: Часть "of m" не выводится при m = 0.

  os.putPercent (s,n)   Вывод строки s и числа n%.
  os.showPercent(s,n)   Например:       Test           1%
                                        TestTest      10%
                                        TestTestTest 100%

  os.putPercent (s,n,m) Вывод строки s и округленного процента 100*n/m%.
  os.showPercent(s,n,m) Например:       Test           1%
                                        TestTest      10%
                                        TestTestTest 100%
                        ПРИМЕЧАНИЕ: Метод выводит n% if m = 0 or m = 100.

ПРИМЕЧАНИЕ: Округление проводится к ближайшему целому.


3.4. Вспомогательные функции
----------------------------

Глобальная функция cTTY_SetMaxOutput() позволяет изменить формат
вывода m, например:
   cTTY_SetMaxOutput (" (", ")");       // выводить как "n (m)"
   cTTY_SetMaxOutput (" of","");        // выводить как "n of m"

Глобальные константы:
   cTTY_numscaleK       Минимальное число, которое при масштабировании
                        выводится с округлением и суффиксом. Это
                        0x2600L = 9728L, меньшие числа выводятся целиком.
   cTTY_numscaleM       Порог для мега.
   cTTY_numscaleG       Порог для гига.
   cTTY_numscaleT       Порог для тера.
   cTTY_numscaleP       Порог для пета.


3.5. Спецификация функции-обработчика
-------------------------------------

Функция-обработчик имеет интерфейс extern "C" и следующие параметры:
   void*        на объект cTTY или NULL
   const char*  на строку или NULL
   long         первое число
   long         второе число или 0
   long         опции и символ

Первый параметр используется для того, чтобы различать вывод от разных
объектов cTTY. Остальных параметры описаны в разделе 3.2 про метод put().

Функция-обработчик должна возвратить 0, другие коды зарезервированы
для будущих расширений.


3.6. Указатель на функцию-обработчик
------------------------------------

Указатель на функцию-обработчик имеет тип cTTY_h.

Ему можно присвоить объект cTTY:
    cTTY_h ph = os;

И затем вызвать функцию-обработчик с проверкой на NULL
    if (ph) (*ph) (&os, s, n, m, o);


3.7. Опции препроцессора
------------------------

При компиляции класса можно определить следующие опции:

    _CTTY_R     выводить '\r' вместо '\b' для возврата курсора в
                cTTY_ProgressOutput

    ПРИМЕЧАНИЕ: Опция не меняет характер вывода, если cTTY_ProgressOutput
                работает с начала строки. Она необходима при трансляции
                для Pocket PC, где консоль не понимает '\b'.


Приложение 1: Сводная таблица определений и методов
===================================================

                    char*  long  char
--------------------------------------
   os <<              +     +     +
   os <<=             +     +     +
   os.put()           +    + +    +
   os.putSpaced()     +    + +
   os.putScaled()     +    + +
   os.putScaled()     +    + +
   os.putPercent()    +    + +
   os.show()          +    + +
   os.putSpaced()     +    + +
   os.putScaled()     +    + +
   os.putScaled()     +    + +
   os.putPercent()    +    + +


Приложение 2: Известные ошибки
==============================


Приложение 3: Что нового
========================

05.09.2006 - Версия 1.2 beta internal


29.11.2006 - Версия 1.2 beta public


30.04.2007 - Версия 1.2a beta internal

- Обеспечена компиляция в GNU g++ 4.1.


18.06.2007 - Версия 1.2a beta public

- ИСПРАВЛЕНО: Функция-обработчик сбрасывает атрибут width
              своего потока вывода в 0.


28.07.2009 - Версия 1.2b public

- Добавлена опция препроцессора _CTTY_R для совместимости с
  Pocket PC.

- Бета-тестирование завершено.


29.12.2009 - правка документации


28.07.2010 - Версия 1.2c public

- ИСПРАВЛЕНО: Предупреждение при проверке на 64-битную совместимость.


07.08.2010 - Версия 2.0 public

- Вместо типа long применяется CBNL, определенный в Cbnl.h для обработки
  64-битных чисел под Visual C++ в 64-битном режиме.


07.08.2010
